"""
Django settings for SGCAS project.
<<<<<<< HEAD

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

=======
Generated by 'django-admin startproject' using Django 3.0.4.
For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/
>>>>>>> 2ee7ce8d840f9c6c7063671e42c3ba744a7e4991
For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
<<<<<<< HEAD
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

=======
from django.urls import reverse_lazy

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
>>>>>>> 2ee7ce8d840f9c6c7063671e42c3ba744a7e4991

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
<<<<<<< HEAD
SECRET_KEY = 'h#(b9xtg_9yo*q07(41&o^uvt-q5@q&eg3oe@@$lul!^r@$ydt'
=======
SECRET_KEY = 'nayi!!*seyd)t#+m)2@l&7m3^!6j=*$vytuxb86ig1#pq(=khl'
>>>>>>> 2ee7ce8d840f9c6c7063671e42c3ba744a7e4991

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

<<<<<<< HEAD

=======
>>>>>>> 2ee7ce8d840f9c6c7063671e42c3ba744a7e4991
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
<<<<<<< HEAD
]

=======
    'django.contrib.sites',
    'multiselectfield',
    'apps.usuario',
    'apps.proyecto',
    'apps.fase',
    'apps.linea_base',
    'apps.comite',
    'apps.rol',
    'apps.tipo_item',
    'apps.item',
    'apps.mensajes',
    'guardian',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
]

SITE_ID = 1

>>>>>>> 2ee7ce8d840f9c6c7063671e42c3ba744a7e4991
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
<<<<<<< HEAD
=======
    'apps.usuario.middleware.RolMiddleware',
>>>>>>> 2ee7ce8d840f9c6c7063671e42c3ba744a7e4991
]

ROOT_URLCONF = 'SGCAS.urls'

<<<<<<< HEAD
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
=======
FIREBASE_CONFIG = {
    "apiKey": "AIzaSyDusx5xjeTHzgEFWGrhN-YK_rvqFt2F8QM",
    "authDomain": "sgcas-is2-team7.firebaseapp.com",
    "databaseURL": "https://sgcas-is2-team7.firebaseio.com",
    "projectId": "sgcas-is2-team7",
    "storageBucket": "sgcas-is2-team7.appspot.com",
    "messagingSenderId": "87120322887",
    "appId": "1:87120322887:web:7864648c8b0706afcfac62"
}

# Para los archivos locales
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
>>>>>>> 2ee7ce8d840f9c6c7063671e42c3ba744a7e4991
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
<<<<<<< HEAD
=======
                'apps.mensajes.context_processors.count_inactive_users'
>>>>>>> 2ee7ce8d840f9c6c7063671e42c3ba744a7e4991
            ],
        },
    },
]

WSGI_APPLICATION = 'SGCAS.wsgi.application'

<<<<<<< HEAD

=======
>>>>>>> 2ee7ce8d840f9c6c7063671e42c3ba744a7e4991
# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
<<<<<<< HEAD
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


=======
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'developersIS2',
        'USER': 'postgres',
        'PASSWORD': 'admin',
        'HOST': 'localhost',
        'PORT': 5432,
    },
    # 'production': {
    #     'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #     'NAME': 'production',
    #     'USER': 'postgres',
    #     'PASSWORD': 'admin',
    #     'HOST': 'localhost',
    #     'PORT': 5432,
    # },
}

>>>>>>> 2ee7ce8d840f9c6c7063671e42c3ba744a7e4991
# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

<<<<<<< HEAD

=======
>>>>>>> 2ee7ce8d840f9c6c7063671e42c3ba744a7e4991
# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

<<<<<<< HEAD

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
=======
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

# STATIC_URL = '/static/'
# STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
# STATIC_ROOT = os.path.join(BASE_DIR, "static/")#Para produccion
STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)  # for development
# STATIC_ROOT = os.path.join(BASE_DIR, "/home/victor/Projects/SGCAS/static/")  # for production

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',

    # Configuracion necesaria para el guardian
    'guardian.backends.ObjectPermissionBackend',
)

# Configuraciones para el envio de mail
from .email_info import *

EMAIL_USE_TLS = EMAIL_USE_TLS
EMAIL_HOST = EMAIL_HOST
EMAIL_HOST_USER = EMAIL_HOST_USER
EMAIL_HOST_PASSWORD = EMAIL_HOST_PASSWORD
EMAIL_PORT = EMAIL_PORT
EMAIL_BACKEND = EMAIL_BACKEND  ##Solo para desarrollo, comentar para produccion

LOGIN_URL = '/account/login'

# La url a donde se dirige una vez realizado el login
LOGIN_REDIRECT_URL = '/account'

# The URL (or URL name) to return to after the user logs out. This is the counterpart to Django’s
ACCOUNT_LOGOUT_REDIRECT_URL = "/"

# The user is required to hand over an e-mail address when signing up.
ACCOUNT_EMAIL_REQUIRED = True

# When set to “mandatory” the user is blocked from logging in until the email address is verified.
# ACCOUNT_EMAIL_VERIFICATION = "mandatory"

# The user is required to enter a username when signing up.
ACCOUNT_USERNAME_REQUIRED = True

# Attempt to bypass the signup form by using fields (e.g. username, email) retrieved from the social account provider.
SOCIALACCOUNT_AUTO_SIGNUP = False

# Indicates whether or not the access tokens are stored in the database.
SOCIALACCOUNT_STORE_TOKENS = True
>>>>>>> 2ee7ce8d840f9c6c7063671e42c3ba744a7e4991
